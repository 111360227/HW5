P05

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int a;
    int *aPtr;
    
    a=7;
    aPtr=&a;
    
    printf("The address of a is %p"
    "\nThe value of aPtr is %p",&a,&aPtr);
    
    printf ("\n\nThe value of is %d"
    "\nThe value of *aPtr is %d",a,*aPtr);
    
    printf("\n\nShowing that * and & are complement of "
    "each other\n&*aPtr = %p"
    "\n*&aPtr =%p\n",&*aPtr,*&aPtr);

    system("pause");
    return 0;
}







P06

#include <stdio.h>
#include <stdlib.h>

int cubeByValue(int n);

int main()
{
    int number=5;
    printf("The original value of number is %d",number);
    
    number=cubeByValue(number);
    
    printf("\nThe new value of number is %d\n",number);
   
    system("pause");
    return 0;
}

int cubeByValue(int n)
{
    return n*n*n;
}







P10

#include <stdio.h>
#include <stdlib.h>

int cubeByValue(int *nPtr);

int main()
{
    int number=5;
    printf("The original value of number is %d",number);
    
    cubeByValue(&number);
    
    printf("\nThe new value of number is %d\n",number);
   
    system("pause");
    return 0;
}

int cubeByValue(int *nPtr)
{
    *nPtr =*nPtr * *nPtr * *nPtr;
}







P13

#include <stdio.h>
#include <stdlib.h>

void cubeByValue(int &nPtr);

int main()
{
    int number=5;
    printf("The original value of number is %d",number);
    
    cubeByValue(number);
    
    printf("\nThe new value of number is %d\n",number);
   
    system("pause");
    return 0;
}

void cubeByValue(int &nPtr)
{
    nPtr =nPtr*nPtr*nPtr;
}







P15

#include <stdio.h>
#include <stdlib.h>
#define SIZE 10

void bubbleSort(int *const array , const int size);

int main()
{
    int a[SIZE]={2,6,4,8,10,12,89,68,45,37};
    int i;
    
    printf("Data items in original order\n");
    
    for(i=0;i<SIZE;i++)
    {
        printf("%4d",a[i]);
    }
    
    bubbleSort(a,SIZE);
    
    printf("\nDate item in ascending order\n");
    
    for(i=0;i<SIZE;i++)
    {
        printf("%4d",a[i]);
    }
    printf("\n");
    system("pause");
    return 0;
}

void bubbleSort(int *const array,const int size)
{
    void swap(int *element1Ptr, int *elemrnt2Ptr);
    int pass;
    int j;
    
    for(pass=0;pass<size-1;pass++)
    {
        for(j=0;j<size-1;j++)
        {
            if(array[j]>array[j+1]);
            {
                swap(&array[j],&array[j+1]);
            }
        }
    }
}

void swap(int *element1Ptr, int *element2Ptr)
{
    int hold= *element1Ptr;
    *element1Ptr=*element2Ptr;
    *element2Ptr=hold;
}







P19

#include <stdio.h>
#include <stdlib.h>
#define SIZE 10

void bubbleSort(int *const array , const int size);

int main(void)
{
    int b[]={10,20,30,40};
    int *bPtr=b;
    int i;
    int offset;
    
    printf("Array b printed with:\nArray subscript notation\n");
    for(i=0;i<4;i++)
    {
        printf("b[%d]=%d\n",i,b[i]);
    }
    
    printf("\nPointer/offset notation where\n "
    "the pointer is the array name\n");
    for(offset=0;offset<4;offset++)
    {
        printf("*(b+%d)=%d\n",offset,*(b+offset));
    }
    
    printf("\nPointer subscript notation\n");
    for(i=0;i<4;i++)
    {
        printf("bPtr[%d]=%d\n",i,bPtr[i]);
    }
    
    printf("\nPointer/offset notation\n");
    for(offset=0;offset<4;offset++)
    {
        printf("*(bPtr+%d)=%d\n",offset,*(bPtr+offset));
    }
    
    system("pause");
    return 0;
}







P25

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void shuffle(int wDeck[][13]);
void deal(const int wDeck[][13],const char *wFace[],
            const char *wSuit[]);

int main(void)
{
    const char *suit[4]={"Heart","Diamonds","Clubs","Spades"};
    
    const char *face[13]=
    {"Ace","Deuce","There","Four",
     "Five","Six","Seven","Eight",
     "Nine","Ten","Jack","Queen","King"};
     
     int deck[4][13]={0};
     
     srand(time(0));
     
     shuffle(deck);
     deal(deck,face,suit);
     system("pause");
     return 0;
}


void shuffle(int wDeck[][13])
{
    int row;
    int column;
    int card;
    
    for(card=1;card<=52;card++)
    {
        do
        {
            row=rand()%4;
            column=rand()%13;
        }while(wDeck[row][column]!=0);
        
        wDeck[row][column]=card;
    }
}

void deal(const int wDeck[][13],const char *wFace[],
            const char *wSuit[])
            
{
    int card;
    int row;
    int column;
    
    for(card=1;card<=52;card++)
    {
        for(row=0;row<=3;row++)
        {
            for(column=0;column<=12;column++)
            {
                if(wDeck[row][column]==card)
                {
                    printf("%5s of %-8s%c",wFace[column],wSuit[row],
                    card%2==0?'\n':'\t');
                }
            }
        }
    }
}








6.19

#include <stdio.h>
#include <stdlib.h>
#include <time.h> 

int main() {
	
	int i,j,q[36000],a,b,z[12]={0},s;
	srand(time(0));
	
	for(i=0;i<36000;i++)
	{
		a=1+(rand()%6);
		b=1+(rand()%6);
		q[i]=a+b;
		z[a+b-2]++;
	}
	for(s=0;s<11;s++)
	{
		printf("%d出現了%d次\n",s+2,z[s]);
	}
	
	return 0;
}







6.33

#include <stdio.h>
#include <stdlib.h>

void change(int *m,int *n);

int main()
{
	int s[100]={0};
	int a,i,j,z,q,M=0,R,L=0,e;
	
	printf("輸入你要幾個數字:");
	scanf("%d",&a);
	printf("輸入你要數字:");
	 
	for(i=0;i<a;i++)
	{
		scanf("%d",&s[i]);
	}
	for(j=0;j<=a;j++)
	{
		for(z=0;z<a-1;z++)
		{
			if(s[z]>s[z+1]) change(&s[z],&s[z+1]);
		}
		
	}
	printf("你輸入的數字照順序排列");
	for(q=0;q<a;q++)
	{
		printf("%5d",s[q]);
	}
	printf("\n");
	
	printf("輸入你要找的數字:");
	scanf("%d",&e);
	
	R=(a-1);
	while(L<=R)
	{
		M=(L+R)/2;
		if(s[M]==e)	
		{
		printf("再註標%d的位子找到%d",M,s[M]);
		return 0;
		}
		if(s[M]>e) R=M-1;
		if(s[M]<e) L=M+1;
	}
	printf("沒找到\n");
	system("pause");
	return 0;
}

void change(int *m,int *n)
{
	int temp;
	temp=*m;
	*m=*n;
	*n=temp;	
}










6.36

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int findstrlen(char b[]);

int main()
{
	char a[10] = {0};
	int  i;
	printf("輸入字串內容\n");
	gets(a);
	printf("\n");
	printf("將字串反過來為\n\n");
	for (i = findstrlen(a); i >= 0; --i)
	{
		printf("%2c", a[i]);
	}


	return 0;
}
int findstrlen(char a[])
{
	int x = 0;
	x = strlen(a);
	return x;
}







6.37

#include <stdio.h>
#include <stdlib.h>
int  Max(int *a, int *b);

int main()
{
	int x, a[100] = { 0 };
	int i, j, n;
	printf("輸入你要幾個數字:");
	scanf("%d", &n);
	printf("你要輸入 %d 個數字", n);
	printf("輸入你要的數字\n");
	for (x = 1; x <= n; x++)
	{
		scanf("%d", &a[x]);
	}
	for (i = 1; i <= n; i++)
	{
		for (j = 1; j < n; j++)
		{
			if (a[j] > a[j + 1])
			{
				Max(&a[j], &a[j + 1]);
			}

		}
	}
	printf("最大數值是 %d ", Max(&a[j], &a[j + 1]));
	return 0;

}
int  Max(int *a, int *b)
{
	int temp, Max = 0;
	temp = *a;
	*a = *b;
	*b = temp;
	if (*b > Max) Max = *b;
	return Max;
}






  

